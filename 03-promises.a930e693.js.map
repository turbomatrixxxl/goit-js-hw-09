{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAE9BC,EAAWH,EAAKE,cAAc,yBAE9BE,EAAOJ,EAAKE,cAAc,wBAE1BG,EAASL,EAAKE,cAAc,0BAENF,EAAKE,cAAc,UAmB3BI,iBAAiB,SAASC,IAC5CA,EAAGC,iBAOH,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAOK,MAAOD,IACjCE,YAAW,KAxBf,IAAuBC,EAAUC,GAAVD,EAyBHH,EAzBaI,EAyBVT,EAAKM,MAxBnB,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCR,YAAW,KACLM,EAEFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAO,sBAAoBJ,QAAiBC,MAAU,GAEvDV,EAASO,MAAM,KAebU,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,QAAQC,IAAI,uBAAqBb,QAAUL,EAAEM,UAAa,IAE3Da,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MAClBQ,QAAQC,IAAI,sBAAoBb,QAAUL,EAAEM,UAAa,GACzD,GAEHN,EAAKM,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst delayInp = form.querySelector(\"input[name = 'delay']\");\n\nconst step = form.querySelector(\"input[name = 'step']\");\n\nconst amount = form.querySelector(\"input[name = 'amount']\");\n\nconst createPromiseButton = form.querySelector('button');\n\n// import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delayInp.value);\n  });\n}\n\ncreatePromiseButton.addEventListener('click', ev => {\n  ev.preventDefault();\n  // console.log(delayInp.value);\n\n  // console.log(step.value);\n\n  // console.log(amount.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    setTimeout(() => {\n      createPromise(i, step.value)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${i} in ${step.value}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${i} in ${step.value}ms`);\n        });\n      // console.log(`✅ Fulfilled promise ${i} in ${step.value}ms`);\n    }, step.value);\n  }\n});\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }),\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInp","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","addEventListener","ev","preventDefault","i","value","setTimeout","position","delay","Promise","resolve","reject","shouldResolve","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.a930e693.js.map"}