{"mappings":"gfAAAA,EAAA,aAAMC,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAEZ,IAAMK,EAAWL,EAAKE,cAAc,yBACpCC,QAAQC,IAAIC,GACZF,QAAQC,IAAIC,EAASC,OAErB,IAAMC,EAAOP,EAAKE,cAAc,wBAChCC,QAAQC,IAAIG,GAGZ,IAAMC,EAASR,EAAKE,cAAc,0BAClCC,QAAQC,IAAII,GAGZ,IAAMC,EAAsBT,EAAKE,cAAc,UAC/CC,QAAQC,IAAIM,uBAoBZD,EAAoBE,iBAAiB,SAAS,SAAAC,GAC5CA,EAAGC,iBACHV,QAAQC,IAAIC,GAEZF,QAAQC,IAAIG,GAEZJ,QAAQC,IAAII,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconsole.log(form);\n\nconst delayInp = form.querySelector(\"input[name = 'delay']\");\nconsole.log(delayInp);\nconsole.log(delayInp.value);\n\nconst step = form.querySelector(\"input[name = 'step']\");\nconsole.log(step);\n// console.log(step.value);\n\nconst amount = form.querySelector(\"input[name = 'amount']\");\nconsole.log(amount);\n// console.log(amount.value);\n\nconst createPromiseButton = form.querySelector('button');\nconsole.log(createPromissesButton);\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delayInp.value);\n  });\n}\n// console.log(createPromise);\n\ncreatePromiseButton.addEventListener('click', ev => {\n  ev.preventDefault();\n  console.log(delayInp);\n\n  console.log(step);\n\n  console.log(amount);\n\n  // for (let i = 0; i < amount.value; i++) {\n  //   setTimeout(() => {\n  //     createPromise(i, step.value);\n  //     // .then(({ position, delay }) => {\n  //     //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     // })\n  //     // .catch(({ position, delay }) => {\n  //     //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     // });\n  //     console.log(`✅ Fulfilled promise ${i} in ${step.value}ms`);\n  //   }, step.value);\n  // }\n});\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }),\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","console","log","$ce04d3a99e08e73b$var$delayInp","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromiseButton","createPromissesButton","addEventListener","ev","preventDefault"],"version":3,"file":"03-promises.b8e97ccb.js.map"}