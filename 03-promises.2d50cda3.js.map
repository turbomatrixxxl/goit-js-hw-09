{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAWH,EAAKE,cAAc,yBAE9BE,EAAOJ,EAAKE,cAAc,wBAE1BG,EAASL,EAAKE,cAAc,0BAENF,EAAKE,cAAc,UAmB3BI,iBAAiB,SAAS,SAAAC,G,kBAS1C,IAxBmBC,EAAUC,EAwBvBC,EAAWC,SAASR,EAASS,OAASD,SAASP,EAAKQ,OACpDC,EACJF,SAASR,EAASS,OAASD,SAASP,EAAKQ,QAAUE,EAAI,IA1BtCN,EA2BLM,EA3BeL,EA2BZI,EA1BZ,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,uBAAwCM,OAAfd,EAAS,QAAYc,OAANb,EAAM,OAGtDQ,EAAO,sBAAuCK,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,GAErDA,E,KAiBAc,MAAK,SAAAC,GACJC,EAAA3B,GAAS4B,OAAOC,QAAQH,EAAQ,CAAEI,QAASlB,IAE3CmB,QAAQC,IAAI,uBAAiCR,OAARR,EAAE,QAAiBQ,OAAXT,EAAW,M,IAEzDkB,OAAM,SAAAC,GACLP,EAAA3B,GAAS4B,OAAOO,QAAQD,EAAO,CAAEJ,QAASlB,IAE1CmB,QAAQC,IAAI,sBAA8BR,OAARR,EAAE,QAAiBQ,OAAXT,EAAW,M,KApB3DN,EAAG2B,iBAOH,IAAK,IAAIC,EAAI,EAAGA,GAAK9B,EAAOO,MAAOuB,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst delayInp = form.querySelector(\"input[name = 'delay']\");\n\nconst step = form.querySelector(\"input[name = 'step']\");\n\nconst amount = form.querySelector(\"input[name = 'amount']\");\n\nconst createPromiseButton = form.querySelector('button');\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\ncreatePromiseButton.addEventListener('click', ev => {\n  ev.preventDefault();\n  // console.log(delayInp.value);\n\n  // console.log(step.value);\n\n  // console.log(amount.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    const allDelay = parseInt(delayInp.value) + parseInt(step.value);\n    const totalDelay =\n      parseInt(delayInp.value) + parseInt(step.value) * (i - 1);\n    createPromise(i, totalDelay)\n      .then(result => {\n        Notiflix.Notify.success(result, { timeout: allDelay });\n\n        console.log(`✅ Fulfilled promise ${i} in ${totalDelay}ms`);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error, { timeout: allDelay });\n\n        console.log(`❌ Rejected promise ${i} in ${totalDelay}ms`);\n      });\n  }\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInp","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","ev","position","delay","allDelay","parseInt","value","totalDelay","i","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","result","$parcel$interopDefault","Notify","success","timeout","console","log","catch","error","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.2d50cda3.js.map"}