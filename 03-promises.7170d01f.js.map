{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,eAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAWH,EAAKE,cAAc,yBAE9BE,EAAOJ,EAAKE,cAAc,wBAE1BG,EAASL,EAAKE,cAAc,0BAMlC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAO,sBAAoBJ,QAAiBC,MAAU,GAEvDA,EAAM,G,CAfeR,EAAKE,cAAc,UAmB3Bc,iBAAiB,SAASC,IAC5CA,EAAGC,iBAOH,IAAK,IAAIC,EAAI,EAAGA,GAAKd,EAAOe,MAAOD,IAAK,CACtC,MAAME,EAAWC,SAASnB,EAASiB,OAASE,SAASlB,EAAKgB,OACpDG,EACJD,SAASnB,EAASiB,OAASE,SAASlB,EAAKgB,QAAUD,EAAI,GACzDb,EAAca,EAAGI,GACdC,MAAKC,IACJC,EAAA5B,GAAS6B,OAAOC,QAAQH,EAAQ,CAAEI,QAASR,IAE3CS,QAAQC,IAAI,uBAAqBZ,QAAUI,MAAe,IAE3DS,OAAMC,IACLP,EAAA5B,GAAS6B,OAAOO,QAAQD,EAAO,CAAEJ,QAASR,IAE1CS,QAAQC,IAAI,sBAAoBZ,QAAQI,MAAe,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst delayInp = form.querySelector(\"input[name = 'delay']\");\n\nconst step = form.querySelector(\"input[name = 'step']\");\n\nconst amount = form.querySelector(\"input[name = 'amount']\");\n\nconst createPromiseButton = form.querySelector('button');\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\ncreatePromiseButton.addEventListener('click', ev => {\n  ev.preventDefault();\n  // console.log(delayInp.value);\n\n  // console.log(step.value);\n\n  // console.log(amount.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    const allDelay = parseInt(delayInp.value) + parseInt(step.value);\n    const totalDelay =\n      parseInt(delayInp.value) + parseInt(step.value) * (i - 1);\n    createPromise(i, totalDelay)\n      .then(result => {\n        Notiflix.Notify.success(result, { timeout: allDelay });\n\n        console.log(`✅ Fulfilled promise ${i} in ${totalDelay}ms`);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error, { timeout: allDelay });\n\n        console.log(`❌ Rejected promise ${i} in ${totalDelay}ms`);\n      });\n  }\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInp","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","ev","preventDefault","i","value","allDelay","parseInt","totalDelay","then","result","$parcel$interopDefault","Notify","success","timeout","console","log","catch","error","failure"],"version":3,"file":"03-promises.7170d01f.js.map"}