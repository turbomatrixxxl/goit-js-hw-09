{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAWH,EAAKE,cAAc,yBAE9BE,EAAOJ,EAAKE,cAAc,wBAE1BG,EAASL,EAAKE,cAAc,0BAENF,EAAKE,cAAc,UAmB3BI,iBAAiB,SAAS,SAAAC,G,kBAS1CC,YAAW,WAxBf,IAAuBC,EAAUC,GAAVD,EAyBHE,EAzBaD,EAyBVN,EAAKQ,MAxBnB,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCV,YAAW,WACLQ,EAEFF,EAAQ,uBAAwCK,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAGtDK,EAAO,sBAAuCI,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GAErDP,EAASS,M,KAePQ,MAAK,SAAAC,GAAWA,EAARZ,SAAeY,EAALX,MACjBY,EAAAxB,GAASyB,OAAOC,QACd,+CAGFC,QAAQC,IAAI,uBAAiCP,OAARR,EAAE,QAAiBQ,OAAXf,EAAKQ,MAAM,M,IAEzDe,OAAM,SAAAN,GAAWA,EAARZ,SAAeY,EAALX,MAClBY,EAAAxB,GAASyB,OAAOK,QACd,8CAGFH,QAAQC,IAAI,sBAAgCP,OAARR,EAAE,QAAiBQ,OAAXf,EAAKQ,MAAM,M,MAE1DR,EAAKQ,M,EAxBVL,EAAGsB,iBAOH,IAAK,IAAIC,EAAI,EAAGA,GAAKzB,EAAOO,MAAOkB,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nconst delayInp = form.querySelector(\"input[name = 'delay']\");\n\nconst step = form.querySelector(\"input[name = 'step']\");\n\nconst amount = form.querySelector(\"input[name = 'amount']\");\n\nconst createPromiseButton = form.querySelector('button');\n\nimport Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delayInp.value);\n  });\n}\n\ncreatePromiseButton.addEventListener('click', ev => {\n  ev.preventDefault();\n  // console.log(delayInp.value);\n\n  // console.log(step.value);\n\n  // console.log(amount.value);\n\n  for (let i = 1; i <= amount.value; i++) {\n    setTimeout(() => {\n      createPromise(i, step.value)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            '✅ Fulfilled promise ${i} in ${step.value}ms'\n          );\n\n          console.log(`✅ Fulfilled promise ${i} in ${step.value}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            '❌ Rejected promise ${i} in ${step.value}ms'\n          );\n\n          console.log(`❌ Rejected promise ${i} in ${step.value}ms`);\n        });\n    }, step.value);\n  }\n});\n\n// Notiflix.Notify.success('Sol lucet omnibus');\n\n// Notiflix.Notify.failure('Qui timide rogat docet negare');\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   }),\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInp","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","ev","setTimeout","position","delay","i","value","Promise","resolve","reject","shouldResolve","Math","random","concat","then","param","$parcel$interopDefault","Notify","success","console","log","catch","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.95562c69.js.map"}